function Photos() {
  var view = Ti.UI.createView({
    height: Ti.UI.SIZE,
    width: Ti.UI.SIZE,
    bottom: 50 });


  var imageDir = Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory,
  'downloaded_images');
  if (!imageDir.exists()) {
    imageDir.createDirectory();
  }
  var scrollView = Ti.UI.createScrollView({
    contentHeight: 'auto',
    contentWidth: 'auto',
    top: 0,
    showHorizontalScrollIndicator: false,
    showVerticalScrollIndicator: true });


  var maxWidth = Ti.Platform.displayCaps.platformWidth;
  var settings = {
    number: 10,
    height: 70,
    width: 70,
    padding: 3,
    perLine: 4 };

  //settings.perLine = Math.floor(maxWidth / (settings.width + settings.padding));
  var iList = imageDir.getDirectoryListing();
  settings.lines = Math.ceil(iList.length / settings.perLine);
  Ti.API.info('PHOTO ERROR' + iList.length + iList[0]);
  var counter = 0;
  for (var i = 0; i < settings.lines; i++) {
    for (var j = 0; j < settings.perLine; j++) {
      var imageFile = Ti.Filesystem.getFile(imageDir.resolve(), iList[counter]);
      var image = Ti.UI.createImageView({
        image: imageFile,
        height: settings.height,
        width: settings.width,
        left: settings.padding * (j + 1) + settings.width * j,
        top: settings.padding * (i + 1) + settings.height * i });

      scrollView.add(image);
      counter++;
      if (counter >= iList.length) break;

    }
  }

  view.add(scrollView);
  return view;
}
module.exports = Photos;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBob3Rvcy5qcyJdLCJuYW1lcyI6WyJQaG90b3MiLCJ2aWV3IiwiVGkiLCJVSSIsImNyZWF0ZVZpZXciLCJoZWlnaHQiLCJTSVpFIiwid2lkdGgiLCJib3R0b20iLCJpbWFnZURpciIsIkZpbGVzeXN0ZW0iLCJnZXRGaWxlIiwiYXBwbGljYXRpb25EYXRhRGlyZWN0b3J5IiwiZXhpc3RzIiwiY3JlYXRlRGlyZWN0b3J5Iiwic2Nyb2xsVmlldyIsImNyZWF0ZVNjcm9sbFZpZXciLCJjb250ZW50SGVpZ2h0IiwiY29udGVudFdpZHRoIiwidG9wIiwic2hvd0hvcml6b250YWxTY3JvbGxJbmRpY2F0b3IiLCJzaG93VmVydGljYWxTY3JvbGxJbmRpY2F0b3IiLCJtYXhXaWR0aCIsIlBsYXRmb3JtIiwiZGlzcGxheUNhcHMiLCJwbGF0Zm9ybVdpZHRoIiwic2V0dGluZ3MiLCJudW1iZXIiLCJwYWRkaW5nIiwicGVyTGluZSIsImlMaXN0IiwiZ2V0RGlyZWN0b3J5TGlzdGluZyIsImxpbmVzIiwiTWF0aCIsImNlaWwiLCJsZW5ndGgiLCJBUEkiLCJpbmZvIiwiY291bnRlciIsImkiLCJqIiwiaW1hZ2VGaWxlIiwicmVzb2x2ZSIsImltYWdlIiwiY3JlYXRlSW1hZ2VWaWV3IiwibGVmdCIsImFkZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLE1BQVQsR0FBa0I7QUFDakIsTUFBSUMsSUFBSSxHQUFHQyxFQUFFLENBQUNDLEVBQUgsQ0FBTUMsVUFBTixDQUFpQjtBQUN6QkMsSUFBQUEsTUFBTSxFQUFHSCxFQUFFLENBQUNDLEVBQUgsQ0FBTUcsSUFEVTtBQUV6QkMsSUFBQUEsS0FBSyxFQUFHTCxFQUFFLENBQUNDLEVBQUgsQ0FBTUcsSUFGVztBQUd6QkUsSUFBQUEsTUFBTSxFQUFHLEVBSGdCLEVBQWpCLENBQVg7OztBQU1BLE1BQUlDLFFBQVEsR0FBR1AsRUFBRSxDQUFDUSxVQUFILENBQWNDLE9BQWQsQ0FBc0JULEVBQUUsQ0FBQ1EsVUFBSCxDQUFjRSx3QkFBcEM7QUFDWixxQkFEWSxDQUFmO0FBRUQsTUFBSSxDQUFFSCxRQUFRLENBQUNJLE1BQVQsRUFBTixFQUF5QjtBQUNyQkosSUFBQUEsUUFBUSxDQUFDSyxlQUFUO0FBQ0g7QUFDRCxNQUFJQyxVQUFVLEdBQUdiLEVBQUUsQ0FBQ0MsRUFBSCxDQUFNYSxnQkFBTixDQUF1QjtBQUNwQ0MsSUFBQUEsYUFBYSxFQUFDLE1BRHNCO0FBRXBDQyxJQUFBQSxZQUFZLEVBQUMsTUFGdUI7QUFHcENDLElBQUFBLEdBQUcsRUFBQyxDQUhnQztBQUlwQ0MsSUFBQUEsNkJBQTZCLEVBQUMsS0FKTTtBQUtwQ0MsSUFBQUEsMkJBQTJCLEVBQUMsSUFMUSxFQUF2QixDQUFqQjs7O0FBUUEsTUFBSUMsUUFBUSxHQUFHcEIsRUFBRSxDQUFDcUIsUUFBSCxDQUFZQyxXQUFaLENBQXdCQyxhQUF2QztBQUNBLE1BQUlDLFFBQVEsR0FBRztBQUNYQyxJQUFBQSxNQUFNLEVBQUMsRUFESTtBQUVYdEIsSUFBQUEsTUFBTSxFQUFDLEVBRkk7QUFHWEUsSUFBQUEsS0FBSyxFQUFDLEVBSEs7QUFJWHFCLElBQUFBLE9BQU8sRUFBQyxDQUpHO0FBS1hDLElBQUFBLE9BQU8sRUFBQyxDQUxHLEVBQWY7O0FBT0E7QUFDQSxNQUFJQyxLQUFLLEdBQUNyQixRQUFRLENBQUNzQixtQkFBVCxFQUFWO0FBQ0FMLEVBQUFBLFFBQVEsQ0FBQ00sS0FBVCxHQUFpQkMsSUFBSSxDQUFDQyxJQUFMLENBQVVKLEtBQUssQ0FBQ0ssTUFBTixHQUFjVCxRQUFRLENBQUNHLE9BQWpDLENBQWpCO0FBQ0EzQixFQUFBQSxFQUFFLENBQUNrQyxHQUFILENBQU9DLElBQVAsQ0FBWSxnQkFBY1AsS0FBSyxDQUFDSyxNQUFwQixHQUEyQkwsS0FBSyxDQUFDLENBQUQsQ0FBNUM7QUFDQSxNQUFJUSxPQUFPLEdBQUcsQ0FBZDtBQUNBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR2IsUUFBUSxDQUFDTSxLQUE3QixFQUFvQ08sQ0FBQyxFQUFyQyxFQUF5QztBQUNyQyxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdkLFFBQVEsQ0FBQ0csT0FBN0IsRUFBc0NXLENBQUMsRUFBdkMsRUFBMkM7QUFDMUMsVUFBSUMsU0FBUyxHQUFJdkMsRUFBRSxDQUFDUSxVQUFILENBQWNDLE9BQWQsQ0FBc0JGLFFBQVEsQ0FBQ2lDLE9BQVQsRUFBdEIsRUFBeUNaLEtBQUssQ0FBQ1EsT0FBRCxDQUE5QyxDQUFqQjtBQUNHLFVBQUlLLEtBQUssR0FBR3pDLEVBQUUsQ0FBQ0MsRUFBSCxDQUFNeUMsZUFBTixDQUFzQjtBQUM5QkQsUUFBQUEsS0FBSyxFQUFDRixTQUR3QjtBQUU5QnBDLFFBQUFBLE1BQU0sRUFBQ3FCLFFBQVEsQ0FBQ3JCLE1BRmM7QUFHOUJFLFFBQUFBLEtBQUssRUFBQ21CLFFBQVEsQ0FBQ25CLEtBSGU7QUFJOUJzQyxRQUFBQSxJQUFJLEVBQUVuQixRQUFRLENBQUNFLE9BQVQsSUFBa0JZLENBQUMsR0FBQyxDQUFwQixDQUFELEdBQTRCZCxRQUFRLENBQUNuQixLQUFULEdBQWVpQyxDQUpsQjtBQUs5QnJCLFFBQUFBLEdBQUcsRUFBRU8sUUFBUSxDQUFDRSxPQUFULElBQWtCVyxDQUFDLEdBQUMsQ0FBcEIsQ0FBRCxHQUE0QmIsUUFBUSxDQUFDckIsTUFBVCxHQUFnQmtDLENBTGxCLEVBQXRCLENBQVo7O0FBT0F4QixNQUFBQSxVQUFVLENBQUMrQixHQUFYLENBQWVILEtBQWY7QUFDQUwsTUFBQUEsT0FBTztBQUNQLFVBQUlBLE9BQU8sSUFBSVIsS0FBSyxDQUFDSyxNQUFyQixFQUE2Qjs7QUFFaEM7QUFDSjs7QUFFRGxDLEVBQUFBLElBQUksQ0FBQzZDLEdBQUwsQ0FBUy9CLFVBQVQ7QUFDQSxTQUFPZCxJQUFQO0FBQ0M7QUFDRDhDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhELE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gUGhvdG9zKCkge1xyXG5cdHZhciB2aWV3ID0gVGkuVUkuY3JlYXRlVmlldyh7XHJcbiAgICBoZWlnaHQgOiBUaS5VSS5TSVpFLFxyXG4gICAgd2lkdGggOiBUaS5VSS5TSVpFLFxyXG4gICAgYm90dG9tIDogNTBcclxufSk7XHJcblxyXG5cdHZhciBpbWFnZURpciA9IFRpLkZpbGVzeXN0ZW0uZ2V0RmlsZShUaS5GaWxlc3lzdGVtLmFwcGxpY2F0aW9uRGF0YURpcmVjdG9yeSxcclxuICAgICdkb3dubG9hZGVkX2ltYWdlcycpO1xyXG5pZiAoISBpbWFnZURpci5leGlzdHMoKSkge1xyXG4gICAgaW1hZ2VEaXIuY3JlYXRlRGlyZWN0b3J5KCk7XHJcbn1cclxudmFyIHNjcm9sbFZpZXcgPSBUaS5VSS5jcmVhdGVTY3JvbGxWaWV3KHtcclxuICAgIGNvbnRlbnRIZWlnaHQ6J2F1dG8nLFxyXG4gICAgY29udGVudFdpZHRoOidhdXRvJyxcclxuICAgIHRvcDowLFxyXG4gICAgc2hvd0hvcml6b250YWxTY3JvbGxJbmRpY2F0b3I6ZmFsc2UsXHJcbiAgICBzaG93VmVydGljYWxTY3JvbGxJbmRpY2F0b3I6dHJ1ZVxyXG59KTtcclxuXHJcbnZhciBtYXhXaWR0aCA9IFRpLlBsYXRmb3JtLmRpc3BsYXlDYXBzLnBsYXRmb3JtV2lkdGg7XHJcbnZhciBzZXR0aW5ncyA9IHtcclxuICAgIG51bWJlcjoxMCxcclxuICAgIGhlaWdodDo3MCxcclxuICAgIHdpZHRoOjcwLFxyXG4gICAgcGFkZGluZzozLCAgIFxyXG4gICAgcGVyTGluZTo0IFxyXG59O1xyXG4vL3NldHRpbmdzLnBlckxpbmUgPSBNYXRoLmZsb29yKG1heFdpZHRoIC8gKHNldHRpbmdzLndpZHRoICsgc2V0dGluZ3MucGFkZGluZykpO1xyXG52YXIgaUxpc3Q9aW1hZ2VEaXIuZ2V0RGlyZWN0b3J5TGlzdGluZygpO1xyXG5zZXR0aW5ncy5saW5lcyA9IE1hdGguY2VpbChpTGlzdC5sZW5ndGgvIHNldHRpbmdzLnBlckxpbmUpO1xyXG5UaS5BUEkuaW5mbygnUEhPVE8gRVJST1InK2lMaXN0Lmxlbmd0aCtpTGlzdFswXSk7XHJcbnZhciBjb3VudGVyID0gMDtcclxuZm9yICh2YXIgaSA9IDA7IGkgPCBzZXR0aW5ncy5saW5lczsgaSsrKSB7XHJcbiAgICBmb3IgKHZhciBqID0gMDsgaiA8IHNldHRpbmdzLnBlckxpbmU7IGorKykge1xyXG4gICAgXHR2YXIgaW1hZ2VGaWxlICA9IFRpLkZpbGVzeXN0ZW0uZ2V0RmlsZShpbWFnZURpci5yZXNvbHZlKCksaUxpc3RbY291bnRlcl0pO1xyXG4gICAgICAgIHZhciBpbWFnZSA9IFRpLlVJLmNyZWF0ZUltYWdlVmlldyh7XHJcbiAgICAgICAgICAgIGltYWdlOmltYWdlRmlsZSxcclxuICAgICAgICAgICAgaGVpZ2h0OnNldHRpbmdzLmhlaWdodCxcclxuICAgICAgICAgICAgd2lkdGg6c2V0dGluZ3Mud2lkdGgsXHJcbiAgICAgICAgICAgIGxlZnQ6KHNldHRpbmdzLnBhZGRpbmcqKGorMSkpICsgKHNldHRpbmdzLndpZHRoKmopLFxyXG4gICAgICAgICAgICB0b3A6KHNldHRpbmdzLnBhZGRpbmcqKGkrMSkpICsgKHNldHRpbmdzLmhlaWdodCppKVxyXG4gICAgICAgIH0pOyAgICAgICAgXHJcbiAgICAgICAgc2Nyb2xsVmlldy5hZGQoaW1hZ2UpO1xyXG4gICAgICAgIGNvdW50ZXIrKztcclxuICAgICAgICBpZiAoY291bnRlciA+PSBpTGlzdC5sZW5ndGgpIGJyZWFrO1xyXG5cclxuICAgIH1cclxufVxyXG5cclxudmlldy5hZGQoc2Nyb2xsVmlldyk7XHJcbnJldHVybiB2aWV3O1xyXG59XHJcbm1vZHVsZS5leHBvcnRzID0gUGhvdG9zOyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx6b3pvXFxEb2N1bWVudHNcXEFwcGNlbGVyYXRvcl9TdHVkaW9fV29ya3NwYWNlXFxFeHBpcm1lbnRcXFJlc291cmNlc1xcVWkifQ==
