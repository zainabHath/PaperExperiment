function Cam(){








































































function showCamera(){
Ti.Media.showCamera({
autohide:!0,
saveToPhotoGallery:!1,
overlay:view,
success:function success(e){
Ti.API.info("Path = "+e.media.nativePath);
var imageFile=Ti.Filesystem.getFile(imageDir.resolve(),"exp"+Date.now()+".jpg");
Ti.API.info("ImageFile path is: "+imageFile.resolve()),
!1===imageFile.write(e.media)&&
Ti.API.info("PHOTO ERROR");






















}});

}var view=Ti.UI.createView({height:Ti.UI.SIZE,width:Ti.UI.SIZE,bottom:50}),button=Ti.UI.createButton({title:"  Take Picture  ",bottom:100});button.addEventListener("click",function(){Ti.Media.takePicture()}),view.add(button);var imageDir=Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory,"downloaded_images");
return imageDir.exists()||imageDir.createDirectory(),view.addEventListener("itemSelected",function(e){Ti.Media.hasCameraPermissions()?showCamera():Ti.Media.requestCameraPermissions(function(e){e.success&&showCamera()})}),view.fireEvent("itemSelected",{}),view;
}
module.exports=Cam;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhbS5qcyJdLCJuYW1lcyI6WyJDYW0iLCJzaG93Q2FtZXJhIiwiVGkiLCJNZWRpYSIsImF1dG9oaWRlIiwic2F2ZVRvUGhvdG9HYWxsZXJ5Iiwib3ZlcmxheSIsInZpZXciLCJzdWNjZXNzIiwiZSIsIkFQSSIsImluZm8iLCJtZWRpYSIsIm5hdGl2ZVBhdGgiLCJpbWFnZUZpbGUiLCJGaWxlc3lzdGVtIiwiZ2V0RmlsZSIsImltYWdlRGlyIiwicmVzb2x2ZSIsIkRhdGUiLCJub3ciLCJ3cml0ZSIsIlVJIiwiY3JlYXRlVmlldyIsImhlaWdodCIsIlNJWkUiLCJ3aWR0aCIsImJvdHRvbSIsImJ1dHRvbiIsImNyZWF0ZUJ1dHRvbiIsInRpdGxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRha2VQaWN0dXJlIiwiYWRkIiwiYXBwbGljYXRpb25EYXRhRGlyZWN0b3J5IiwiZXhpc3RzIiwiY3JlYXRlRGlyZWN0b3J5IiwiaGFzQ2FtZXJhUGVybWlzc2lvbnMiLCJyZXF1ZXN0Q2FtZXJhUGVybWlzc2lvbnMiLCJmaXJlRXZlbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxRQUFTQSxDQUFBQSxHQUFULEVBQWU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5RWYsUUFBU0MsQ0FBQUEsVUFBVCxFQUFzQjtBQUNsQkMsRUFBRSxDQUFDQyxLQUFILENBQVNGLFVBQVQsQ0FBb0I7QUFDaEJHLFFBQVEsR0FEUTtBQUVoQkMsa0JBQWtCLEdBRkY7QUFHaEJDLE9BQU8sQ0FBR0MsSUFITTtBQUloQkMsT0FBTyxDQUFHLGlCQUFTQyxDQUFULENBQVk7QUFDbEJQLEVBQUUsQ0FBQ1EsR0FBSCxDQUFPQyxJQUFQLENBQVksVUFBWUYsQ0FBQyxDQUFDRyxLQUFGLENBQVFDLFVBQWhDLENBRGtCO0FBRWxCLEdBQUlDLENBQUFBLFNBQVMsQ0FBSVosRUFBRSxDQUFDYSxVQUFILENBQWNDLE9BQWQsQ0FBc0JDLFFBQVEsQ0FBQ0MsT0FBVCxFQUF0QixDQUEwQyxNQUFNQyxJQUFJLENBQUNDLEdBQUwsRUFBTixDQUFtQixNQUE3RCxDQUFqQjtBQUNUbEIsRUFBRSxDQUFDUSxHQUFILENBQU9DLElBQVAsQ0FBWSxzQkFBd0JHLFNBQVMsQ0FBQ0ksT0FBVixFQUFwQyxDQUgyQjtBQUl2QixLQUFBSixTQUFTLENBQUNPLEtBQVYsQ0FBZ0JaLENBQUMsQ0FBQ0csS0FBbEIsQ0FKdUI7QUFLMUJWLEVBQUUsQ0FBQ1EsR0FBSCxDQUFPQyxJQUFQLENBQVksYUFBWixDQUwwQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0QnJCLENBaENlLENBQXBCLENBRGtCOztBQW1DbEIsQ0E1R1csR0FFVkosQ0FBQUEsSUFBSSxDQUFFTCxFQUFFLENBQUNvQixFQUFILENBQU1DLFVBQU4sQ0FBaUIsQ0FDeEJDLE1BQU0sQ0FBR3RCLEVBQUUsQ0FBQ29CLEVBQUgsQ0FBTUcsSUFEUyxDQUV4QkMsS0FBSyxDQUFHeEIsRUFBRSxDQUFDb0IsRUFBSCxDQUFNRyxJQUZVLENBR3hCRSxNQUFNLENBQUcsRUFIZSxDQUFqQixDQUZJLENBT1hDLE1BQU0sQ0FBRzFCLEVBQUUsQ0FBQ29CLEVBQUgsQ0FBTU8sWUFBTixDQUFtQixDQUM1QkMsS0FBSyxDQUFDLGtCQURzQixDQUV4QkgsTUFBTSxDQUFHLEdBRmUsQ0FBbkIsQ0FQRSxDQVlmQyxNQUFNLENBQUNHLGdCQUFQLENBQXdCLE9BQXhCLENBQWlDLFVBQVksQ0FBRTdCLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTNkIsV0FBVCxFQUF5QixDQUF4RSxDQVplLENBY2Z6QixJQUFJLENBQUMwQixHQUFMLENBQVNMLE1BQVQsQ0FkZSxDQXlEZixHQUFJWCxDQUFBQSxRQUFRLENBQUdmLEVBQUUsQ0FBQ2EsVUFBSCxDQUFjQyxPQUFkLENBQXNCZCxFQUFFLENBQUNhLFVBQUgsQ0FBY21CLHdCQUFwQyxDQUNYLG1CQURXLENBQWY7QUFvREcsTUFsREdqQixDQUFBQSxRQUFRLENBQUNrQixNQUFULEVBa0RILEVBakRDbEIsUUFBUSxDQUFDbUIsZUFBVCxFQWlERCxDQS9DSDdCLElBQUksQ0FBQ3dCLGdCQUFMLENBQXNCLGNBQXRCLENBQXNDLFNBQVN0QixDQUFULENBQVksQ0FDOUNQLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTa0Msb0JBQVQsRUFEOEMsQ0FFMUNwQyxVQUFVLEVBRmdDLENBSTFDQyxFQUFFLENBQUNDLEtBQUgsQ0FBU21DLHdCQUFULENBQWtDLFNBQVU3QixDQUFWLENBQWEsQ0FDM0NBLENBQUMsQ0FBQ0QsT0FBRixFQUFhUCxVQUFVLEVBQzFCLENBRkQsQ0FJRixDQVJOLENBK0NHLENBdENITSxJQUFJLENBQUNnQyxTQUFMLENBQWUsY0FBZixDQUE4QixFQUE5QixDQXNDRyxDQUFPaEMsSUFBUDtBQUNGO0FBQ0RpQyxNQUFNLENBQUNDLE9BQVAsQ0FBaUJ6QyxHIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gQ2FtKCkge1xuXHRcblx0dmFyIHZpZXc9IFRpLlVJLmNyZWF0ZVZpZXcoe1xuICAgIGhlaWdodCA6IFRpLlVJLlNJWkUsXG4gICAgd2lkdGggOiBUaS5VSS5TSVpFLFxuICAgIGJvdHRvbSA6IDUwXG59KTtcbnZhciBidXR0b24gPSBUaS5VSS5jcmVhdGVCdXR0b24oe1xuICAgIHRpdGxlOicgIFRha2UgUGljdHVyZSAgJyxcbiAgICAgICAgYm90dG9tIDogMTAwXG5cbn0pO1xuYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkgeyBUaS5NZWRpYS50YWtlUGljdHVyZSgpOyB9KTtcblxudmlldy5hZGQoYnV0dG9uKTtcbiBcbi8qaWYgKFRpLk1lZGlhLmhhc0NhbWVyYVBlcm1pc3Npb25zKCkpIHtcbiAgICAgICAgIFRpLk1lZGlhLnNob3dDYW1lcmEoe1xuICAgICAgICAgXHRzaG93Q29udHJvbHMgOiBmYWxzZSxcbiAgICAgICAgYXV0b2hpZGUgOiBmYWxzZSxcbiAgICAgICAgc2F2ZVRvUGhvdG9HYWxsZXJ5IDogdHJ1ZSxcbiAgICAgICAgb3ZlcmxheSA6IHZpZXcsXG4gICAgICAgIHN1Y2Nlc3MgOiBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBUaS5BUEkuaW5mbygnUGF0aCA9ICcgKyBlLm1lZGlhLm5hdGl2ZVBhdGgpO1xuICAgICAgICAgICAgdmFyIGltYWdlRmlsZSAgPSBUaS5GaWxlc3lzdGVtLmdldEZpbGUoaW1hZ2VEaXIucmVzb2x2ZSgpLCAnZXhwJytEYXRlLm5vdygpICsgJy5qcGcnKTtcblx0XHRcdFRpLkFQSS5pbmZvKFwiSW1hZ2VGaWxlIHBhdGggaXM6IFwiICsgaW1hZ2VGaWxlLnJlc29sdmUoKSk7XG5cdFx0XHRpZiAoaW1hZ2VGaWxlLndyaXRlKGUubWVkaWEpPT09ZmFsc2UpIHtcbiBcdFx0XHRUaS5BUEkuaW5mbygnUEhPVE8gRVJST1InKTtcbiBcdFx0XHR9XG4gICAgICAgICAgICAvKnZhciBpdiA9IFRpLlVJLmNyZWF0ZUltYWdlVmlldyh7XG4gICAgICAgICAgICBcdGhlaWdodCA6IFRpLlVJLlNJWkUsXG4gICAgICAgICAgICB3aWR0aCA6IFRpLlVJLlNJWkUsXG4gICAgICAgICAgICAgICAgaW1hZ2U6IGVcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIHZpZXcyID0gVGkuVUkuY3JlYXRlVmlldyh7XG4gICAgICAgICAgICBoZWlnaHQgOiBUaS5VSS5TSVpFLFxuICAgICAgICAgICAgd2lkdGggOiBUaS5VSS5TSVpFLFxuICAgICAgICAgICAgYm90dG9tIDogNTBcbiAgICAgICAgICAgfSk7XG4gICAgICAgICAgIHZhciBidXR0b24zID0gVGkuVUkuY3JlYXRlQnV0dG9uKHtcbiAgIFx0XHQgICB0aXRsZTonICBTYXZlIFBpY3R1cmUgICcsXG5cdCAgICAgICBib3R0b20gOiA2MFxuXHRcdFx0fSk7XG5cdFx0XHRidXR0b24zLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpe1xuXHRcdFx0XHR2aWV3LnJlbW92ZSh2aWV3Mik7XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdHZpZXcyLmFkZChpdik7XG5cdFx0XHR2aWV3Mi5hZGQoYnV0dG9uMyk7ICAgICAgICAgICAgXG5cdFx0XHR2aWV3LmFkZCh2aWV3Mik7ICAgXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBUaS5NZWRpYS5yZXF1ZXN0Q2FtZXJhUGVybWlzc2lvbnMoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGUuc3VjY2VzcyAmJiBzaG93Q2FtZXJhKCk7XG4gICAgICAgIH0pO1xuICAgIH0qL1xudmFyIGltYWdlRGlyID0gVGkuRmlsZXN5c3RlbS5nZXRGaWxlKFRpLkZpbGVzeXN0ZW0uYXBwbGljYXRpb25EYXRhRGlyZWN0b3J5LFxuICAgICdkb3dubG9hZGVkX2ltYWdlcycpO1xuaWYgKCEgaW1hZ2VEaXIuZXhpc3RzKCkpIHtcbiAgICBpbWFnZURpci5jcmVhdGVEaXJlY3RvcnkoKTtcbn1cbnZpZXcuYWRkRXZlbnRMaXN0ZW5lcignaXRlbVNlbGVjdGVkJywgZnVuY3Rpb24oZSkge1xuaWYgKFRpLk1lZGlhLmhhc0NhbWVyYVBlcm1pc3Npb25zKCkpIHtcbiAgICAgICAgc2hvd0NhbWVyYSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIFRpLk1lZGlhLnJlcXVlc3RDYW1lcmFQZXJtaXNzaW9ucyhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5zdWNjZXNzICYmIHNob3dDYW1lcmEoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIFx0fSk7XG52aWV3LmZpcmVFdmVudCgnaXRlbVNlbGVjdGVkJyx7fSk7XG4gXG5mdW5jdGlvbiBzaG93Q2FtZXJhKCkge1xuICAgIFRpLk1lZGlhLnNob3dDYW1lcmEoe1xuICAgICAgICBhdXRvaGlkZSA6IHRydWUsXG4gICAgICAgIHNhdmVUb1Bob3RvR2FsbGVyeSA6IGZhbHNlLFxuICAgICAgICBvdmVybGF5IDogdmlldyxcbiAgICAgICAgc3VjY2VzcyA6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIFRpLkFQSS5pbmZvKCdQYXRoID0gJyArIGUubWVkaWEubmF0aXZlUGF0aCk7XG4gICAgICAgICAgICB2YXIgaW1hZ2VGaWxlICA9IFRpLkZpbGVzeXN0ZW0uZ2V0RmlsZShpbWFnZURpci5yZXNvbHZlKCksICdleHAnK0RhdGUubm93KCkgKyAnLmpwZycpO1xuXHRcdFx0VGkuQVBJLmluZm8oXCJJbWFnZUZpbGUgcGF0aCBpczogXCIgKyBpbWFnZUZpbGUucmVzb2x2ZSgpKTtcblx0XHRcdGlmIChpbWFnZUZpbGUud3JpdGUoZS5tZWRpYSk9PT1mYWxzZSkge1xuIFx0XHRcdFRpLkFQSS5pbmZvKCdQSE9UTyBFUlJPUicpO1xuIFx0XHRcdH1cbiAgICAgICAgICAgIC8qdmFyIGl2ID0gVGkuVUkuY3JlYXRlSW1hZ2VWaWV3KHtcbiAgICAgICAgICAgIFx0aGVpZ2h0IDogVGkuVUkuU0laRSxcbiAgICAgICAgICAgIHdpZHRoIDogVGkuVUkuU0laRSxcbiAgICAgICAgICAgICAgICBpbWFnZTogZVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB2YXIgdmlldzIgPSBUaS5VSS5jcmVhdGVWaWV3KHtcbiAgICAgICAgICAgIGhlaWdodCA6IFRpLlVJLlNJWkUsXG4gICAgICAgICAgICB3aWR0aCA6IFRpLlVJLlNJWkUsXG4gICAgICAgICAgICBib3R0b20gOiA1MFxuICAgICAgICAgICB9KTtcbiAgICAgICAgICAgdmFyIGJ1dHRvbjMgPSBUaS5VSS5jcmVhdGVCdXR0b24oe1xuICAgXHRcdCAgIHRpdGxlOicgIFNhdmUgUGljdHVyZSAgJyxcblx0ICAgICAgIGJvdHRvbSA6IDYwXG5cdFx0XHR9KTtcblx0XHRcdGJ1dHRvbjMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCl7XG5cdFx0XHRcdHZpZXcucmVtb3ZlKHZpZXcyKTtcblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0dmlldzIuYWRkKGl2KTtcblx0XHRcdHZpZXcyLmFkZChidXR0b24zKTsgICAgICAgICAgICBcblx0XHRcdHZpZXcuYWRkKHZpZXcyKTsgICovICAgICBcbiAgICAgICAgfVxuICAgIH0pO1xuICAgfVxuICAgcmV0dXJuIHZpZXc7XG59XG5tb2R1bGUuZXhwb3J0cyA9IENhbTsiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9ub3VmL0RvY3VtZW50cy9LRlVQTTEtMS9SZXNlYXJjaF9NZXRob2RzL2FwcHMvaW50ZXJwcmV0ZWQzL1Jlc291cmNlcy9VaSJ9
